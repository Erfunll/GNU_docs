1 
مروری اجمالی بر make

سودمندی میک به صورت تعیین میکند کدام قسمت از یک برنامه بزرگ احتیاج به کامپایل دوباره دارد و دستوراتی را برای کامپایل دوباره انها صادر میکند.این به صورت دستی توصیف میکند گنو میک را که تحمیل شده است بوسیله ی ریچارد استالمن و رولند مکگرس.توسعه ی گنو میک از ورژن 3.76 بوسیله ی پاول اسمیت رسیدگی شده است.

گنو میک با بخش 6.2 از  IEEE Standard 1003.2-1992 (POSIX.2)  وفق داده شده است.

مثال های ما برنامه های زبان سی را نشان میدهد. از زمانی که بیشتر رایج بوده اند اما شما میتوانید از میک با هر زبان برنامه نویسی که کامپایلر میتواند با شل ران شود استفاده کنید.
شما میتوانید از این برای توصیف هر وظیفه ای که بعضی فایلها باید بصورت اتوماتیک به روز رسانی شوند از دیگرفایلها  از زمانی که دیگر فایلها تعییر میکنند. 

اماده سازی              اماده سازی و اجرای میک.

خواندن                   بر خواندن این متن.

باگ ها                   مشکلات و باگ ها.

بعدی :خواندن     قبلی:بررسی اجمالی   بالا:بررسی اجمالی 

آماده سازی 
هل
آماده سازی و اجرای میک

برای آماده سازی برای استفاده میک شما باید یک فایل بنویسید که میک فابل نامیده میشود و توصیف میکند ارتباط میان فایلها در برنامه ی شما و فراهم میکند دستوراتی برای به روز رسانی هر فایل. در یک برنامه معمولا فایل قابل اجرا به روز رسانی میشود از آبجکت فایل ها که در چرخش ساخته شده اند با کامپایل شدن سورس فایلها

اولین بار که یک میک فایل مناسب وجود دارد هر زمان که شما بعضی سورس فایلها را تغییر دهید . این شل ساده:

make


کفایت کردن برای انجام دادن همه ی کامپایل های دوباره ضروری. برنامه میک استفاده میکند اطلاعات پایه فایل میک و دفعات اخرین تغیییرات فایلها  را برای تصمیم گیری اینکه کدام فایلها نیاز به به روز رسانی دارند. برای هر کدام از ان فایلها دستورالعمل های ثبت شده در دیتابیس را صادر میکند.

شما میتوانید فراهم کنید  استدلال های کامند لاین را برای دست کردن و کنترل کردن اینکه کدام فایلها باید دوباره کامپایل شوند یا چگونه کامپایل شوند. چگونه اجرا کردن میک را ببینید.
Next: Bugs, Previous: Preparing, Up: Overview   [Contents][Index]
1.1 How to Read This Manual

If you are new to make, or are looking for a general introduction, read the first few sections of each chapter, skipping the later sections. In each chapter, the first few sections contain introductory or general information and the later sections contain specialized or technical information. The exception is the second chapter, An Introduction to Makefiles, all of which is introductory.

If you are familiar with other make programs, see Features of GNU make, which lists the enhancements GNU make has, and Incompatibilities and Missing Features, which explains the few things GNU make lacks that others have.

For a quick summary, see Options Summary, Quick Reference, and Special Targets.

Previous: Reading, Up: Overview   [Contents][Index]
1.2 Problems and Bugs

If you have problems with GNU make or think you’ve found a bug, please report it to the developers; we cannot promise to do anything but we might well want to fix it.

Before reporting a bug, make sure you’ve actually found a real bug. Carefully reread the documentation and see if it really says you can do what you’re trying to do. If it’s not clear whether you should be able to do something or not, report that too; it’s a bug in the documentation!

Before reporting a bug or trying to fix it yourself, try to isolate it to the smallest possible makefile that reproduces the problem. Then send us the makefile and the exact results make gave you, including any error or warning messages. Please don’t paraphrase these messages: it’s best to cut and paste them into your report. When generating this small makefile, be sure to not use any non-free or unusual tools in your recipes: you can almost always emulate what such a tool would do with simple shell commands. Finally, be sure to explain what you expected to occur; this will help us decide whether the problem was really in the documentation.

Once you have a precise problem you can report it in one of two ways. Either send electronic mail to:

    bug-make@gnu.org

or use our Web-based project management tool, at:

    http://savannah.gnu.org/projects/make/

In addition to the information above, please be careful to include the version number of make you are using. You can get this information with the command ‘make --version’. Be sure also to include the type of machine and operating system you are using. One way to obtain this information is by looking at the final lines of output from the command ‘make --help’. 
